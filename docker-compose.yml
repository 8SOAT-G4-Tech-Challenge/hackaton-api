services:
  postgres-hackaton-frame-zipper:
    container_name: hackaton-frame-zipper-postgres
    image: postgres:alpine
    ports:
      - '5440:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: hackaton-frame-zipper
      PGDATA: '/var/lib/postgresql/data'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - hackaton-frame-zipper-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: hackaton-frame-zipper-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3339:3339'
      - '5555:5555'
    env_file: .env
    depends_on:
      postgres-hackaton-frame-zipper:
        condition: service_healthy
    environment:
      DATABASE_URL: 'postgresql://postgres:docker@postgres-hackaton-frame-zipper:5432/hackaton-frame-zipper?schema=public'
      API_PORT: 3339
    networks:
      - hackaton-frame-zipper-network
    volumes:
      - './src/adapter/driven/infra/storage/images:/app/dist/adapter/driven/infra/storage/images'
      - './src/adapter/driven/infra/storage/uploads:/app/dist/adapter/driven/infra/storage/uploads'

networks:
  hackaton-frame-zipper-network:
    driver: bridge

volumes:
  postgres-data:
