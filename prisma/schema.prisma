// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
	binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
	initialized
	processing
	processed
	error
}

model User {
	id				String @id @default(uuid())
	name			String? @db.VarChar(255)
	email			String @unique @db.VarChar(255)
	password		String @db.VarChar(255)
	sessionToken	String? @db.VarChar(255) @map("session_token")
	isAdmin			Boolean @map("is_admin")
	createdAt		DateTime @default(now()) @map("created_at")
	updatedAt 		DateTime @updatedAt @map("updated_at")

	files 			File[] @relation("UserFiles")

	@@map("user")
}

model File {
	id					String @id @default(uuid())
	userId 				String @db.VarChar(255) @map("user_id")
	status				Status @map("status")
	videoUrl			String @db.VarChar(255) @map("video_url")
	imagesCompressedUrl String? @db.VarChar(255) @map("images_compressed_url")
	createdAt			DateTime @default(now()) @map("created_at")
	updatedAt 			DateTime @updatedAt @map("updated_at")

	user				User? @relation(fields: [userId], references: [id], name: "UserFiles")

	@@map("file")
}