// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
	binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	id				String @id @default(uuid())
	name			String? @db.VarChar(255)
	email			String @unique @db.VarChar(255)
	password		String @db.VarChar(255)
	sessionToken	String? @db.VarChar(255) @map("session_token")
	isAdmin			Boolean @map("is_admin")
	createdAt		DateTime @default(now()) @map("created_at")

	@@map("users")
}

model Customer {
	id			String @id @default(uuid())
	name		String? @db.VarChar(255)
	email		String? @db.VarChar(255)
	cpf			String @unique @db.VarChar(11)
 	createdAt	DateTime @default(now()) @map("created_at")

	@@map("customers")
}

// model Product {
// 	id 		String @id @default(uuid())
// 	name 	String

// 	orders Order[]

// 	@@map("products")
// }

// model Order {
// 	id			String @id @default(uuid())
// 	createdAt DateTime @default(now()) @map("created_at")
// 	updatedAt DateTime? @updatedAt @map("updated_at")
// 	itemId String @map("product_id")
	
// 	item Product @relation(fields: [itemId], references: [id]) // Criação de relacionamento entre as tabelas Order -> Product

// 	@@map("orders")
// }